% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling.R
\name{istp.manual}
\alias{istp.manual}
\title{Drawing posterior samples by
using Importance sampling with Transparent reparameterization (ISTP)}
\usage{
istp.manual(posterior_fun, h_inv, N, weight_fun, var_names)
}
\arguments{
\item{posterior_fun}{function. Generating samples from
convenience posteriors posterior_fun(N)}

\item{h_inv}{function. An inverse function of h(theta) = (phi, lambda).
This function takes theta which is vector of paarameters.}

\item{N}{integer. The posterior sample size N}

\item{weight_fun}{function. Calculate weights by taking two arguments weight_fun(theta_matrix, deter)}

\item{var_names}{vector of string. variable names.}
}
\value{
A list of results including samples and ESS.
}
\description{
Return ESS and posterior samples found by ISTP algorithm.
}
\examples{
data(small_cross)
data = small_cross
posterior_fun<-function(N){
  eta<- rdirichlet(N,data+1)
  se <- rbeta(N,25,3)
  sp <- rbeta(N,30,1.5)
  phi_lambda_matrix = cbind(eta[,1:3],se,sp)
  colnames(phi_lambda_matrix) = c(paste0("eta[",1:3,"]"),"se","sp")
  return(phi_lambda_matrix)
}
weight_fun<-function(theta_matrix, deter){
    apply(theta_matrix, 1,
      function(theta) ifelse(valid_A(theta),(theta[4]+theta[5]-1)^(-2),0))
}
valid_A <-function(theta){
pi = theta[1:3]
pi = c(pi,1-sum(pi))
all(pi>=0 & pi <=1)
}
h_cross_inv <- function(phiLambda) {
eta11 = ifelse(length(names(phiLambda)) == 5, phiLambda["eta[1]"],phiLambda[1])
eta12 = ifelse(length(names(phiLambda)) == 5, phiLambda["eta[2]"],phiLambda[2])
eta21 = ifelse(length(names(phiLambda)) == 5, phiLambda["eta[3]"],phiLambda[3])
se = ifelse(length(names(phiLambda)) == 5, phiLambda["se"],phiLambda[4])
sp = ifelse(length(names(phiLambda)) == 5, phiLambda["sp"],phiLambda[5])
eta22 = 1 - eta11 - eta12 - eta21
denom = se+sp-1
pi11 = 1/denom*(sp*eta11 + (sp-1)*eta21)
pi12 = 1/denom*(sp*eta12 + (sp-1)*eta22)
pi21 = 1/denom*((se-1)*eta11 + se*eta21)
return(c(pi11,pi12,pi21,se,sp))
}
var_name = c(paste0("pi","[",c(11,12,21),"]"),"se","sp")
istp.manual(posterior_fun, h_cross_inv, 15000, weight_fun, var_name)
}
